{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-24f770dda330fddb732e.js","mappings":"o2BA8BA,IAsBA,EAtBY,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YACpB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,WAAkBC,EAAlB,WAEA,OACE,kBACE,aAAKC,MAAK,QAAUJ,EAAYK,QAChC,cAAMC,GAAI,CAAEC,WAAF,SAAwBC,eAAxB,gBAAyDC,SAAS,UAC1E,cAASC,GAAT,KAAiBC,QAAjB,YAAqCL,GAAI,CAAEM,QAAS,IACjDZ,EAFL,OAIE,gBACEM,GAAI,0CAAaO,EAAb,2BAAaA,EAAb,OAA0BF,QAA1B,kBAAsDC,QAAS,KACnEE,IAAIC,EAAAA,EAAAA,GAAe,IAAD,UARxB,mBAaE,aAAShB,MAAT,EAAuBO,GAAI,CAAEU,GAAI,CAAC,EAAE,QC9B3B,SAASC,EAAmB,GAAsB,IAAjBC,EAAgB,oBAEpDC,EACND,EAFJ,aAIA,OAAO,iCAAKnB,MAAOoB,EAAQC,OAA3B,ICnBF,MCce,YAAkD,IAAjBF,EAAgB,oBAEpDC,EACND,EAFJ,aAIA,OAAO,iCAAKnB,MAAOoB,EAAQC,OAA3B","sources":["webpack://Sashi's personal blog/./src/components/tag.tsx","webpack://Sashi's personal blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack://Sashi's personal blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://Sashi's personal blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Seo title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n"],"names":["posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","t","to","replaceSlashes","mt","MinimalBlogCoreTag","props","allPost","nodes"],"sourceRoot":""}