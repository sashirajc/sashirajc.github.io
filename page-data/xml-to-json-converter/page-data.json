{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/xml-to-json-converter",
    "result": {"data":{"post":{"slug":"/xml-to-json-converter","title":"XML to JSON Converter","date":"19.02.2018","tags":[{"name":"Coding","slug":"coding"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"XML to JSON Converter\",\n  \"date\": \"2018-02-19T00:00:00.000Z\",\n  \"tags\": [\"Coding\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"XML to JSON converter\"), mdx(\"p\", null, \"I recently came across this problem while designing my backend NodeJS application using Loopback framework. One of the backend systems we are connecting to can only work with SOAP APIs and we were forced to use XML. It had a key-value pair inside one of the XML fields. But the Loopback application works only with JSON and I had no idea how the JSON request would have to be to get a key-value pair on XML. I tried a couple of XML to JSON converters as I had the expected XML request with me and needed help figuring out the JSON input. Most of the converters gave me JSON which didnt quite work. Ultimately this is what worked for me.\"), mdx(\"p\", null, \"XML key-value pairs conversion\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n  <soapenv:Header/>\\n  <soapenv:Body>\\n    <ns2:registerCustomerRequest xmlns:ns2=\\\"http://namespace.mgtplc.com\\\">\\n      <ns2:customer>\\n        <ns2:nationality>PHL</ns2:nationality>\\n      </ns2:customer>\\n      <ns2:data>\\n        <dataValue xmlns=\\\"http://core.namespace.mgtplc.com\\\" key=\\\"displayName\\\">juandelacruz</dataValue>\\n      </ns2:data>\\n    </ns2:registerCustomerRequest>\\n  </soapenv:Body>\\n</soapenv:Envelope>\\n\")), mdx(\"p\", null, \"REST\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n  \\\"soapenv:Envelope\\\": {\\n    \\\"-xmlns:soapenv\\\": \\\"http://schemas.xmlsoap.org/soap/envelope/\\\",\\n    \\\"soapenv:Body\\\": {\\n      \\\"ns2:registerCustomerRequest\\\": {\\n        \\\"-xmlns:ns2\\\": \\\"http://namespace.mgtplc.com\\\",\\n        \\\"ns2:customer\\\": {\\n          \\\"ns2:nationality\\\": \\\"PHL\\\"\\n        },\\n        \\\"ns2:data\\\": {\\n          \\\"dataValue\\\": {\\n            \\\"-xmlns\\\": \\\"http://core.namespace.mgtplc.com\\\",\\n            \\\"-key\\\": \\\"displayName\\\",\\n            \\\"#text\\\": \\\"juandelacruz\\\"\\n          }\\n        },\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Most online converters converted the key field as \\\"@key\\\" but what loopback needs is \\\"-key\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"XML to JSON converter I recently came across this problem while designing my backend NodeJS application using Loopback framework. One of theâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/xml-to-json-converter","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}